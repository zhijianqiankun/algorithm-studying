题目：检查是否区域内所有整数都被覆盖
给你一个二维整数数组 ranges 和两个整数 left 和 right 。每个 ranges[i] = [starti, endi] 表示一个从 starti 到 endi 的 闭区间 。

如果闭区间 [left, right] 内每个整数都被 ranges 中 至少一个 区间覆盖，那么请你返回 true ，否则返回 false 。

已知区间 ranges[i] = [starti, endi] ，如果整数 x 满足 starti <= x <= endi ，那么我们称整数x 被覆盖了。

输入：ranges = [[1,2],[3,4],[5,6]], left = 2, right = 5
输出：true
解释：2 到 5 的每个整数都被覆盖了：
- 2 被第一个区间覆盖。
- 3 和 4 被第二个区间覆盖。
- 5 被第三个区间覆盖。

差分数组：统计的一种变形，从所有元素的bool设置，转为数值运算的极佳方法。
比如[1,6]就把1处的值加一，6+1=7处的值减一，从而1到6的前缀和都是大于0的，其他部分都是小于等于0的，以此可知是否在该数组中。
多个区间限定同样采用，也可达到相同效果。

代码如下:
bool isCovered(vector<vector<int>>& ranges, int left, int right) {
        vector<int> diff(52);
        for(auto&& one:ranges){
            diff[one[0]]++;
            diff[one[1]+1]--;
        }
        int pre=0;
        for(int i=0;i<=right;i++){
            pre+=diff[i];
            if(i>=left&&pre<=0){
                return false;
            }
        }
        return true;
    }
